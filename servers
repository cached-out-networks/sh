servers=~/etc/servers.txt
pservers=~/etc/production_servers.txt
#bservers=~/etc/bastions.txt
#jservers=~/etc/jumpbox-servers.txt
#wservers#=~/etc/ks_servers.txt


cachedout() 
{
    iterm2_set_user_var ssh_string "${USER} @ cachedout.net"
    ssh -v "${USER}@cachedhit.net"
    iterm2_set_user_var ssh_string "[ no active ssh ]"
}

h()
{
    if [ -z "$1" ] ; then
        echo "Usage: h hostname"
    fi
    grep "$1" /etc/hosts
}

servers()
{
    if [[ $1 =~ "pv" || $1 =~ "vp" ]] ; then
        alias | grep '=.ssh ' | grep pe-local | sed 's/.*ssh \(.*\)@\(.*\).$/ssh \1@\2/'
    elif [[ $1 =~ "v" ]] ; then
        alias | grep '=.ssh ' | grep -v pe-local | sed 's/.*ssh \(.*\)@\(.*\).$/ssh \1@\2/'
    elif [[ $1 =~ "p" ]] ; then
        alias | grep '=.ssh ' | grep pe-local | sed 's/.*ssh \(.*\)@\(.*\).$/\2 (\1)/'
    else 
        alias | grep '=.ssh ' | grep -v pe-local | sed 's/.*ssh \(.*\)@\(.*\).$/\2 (\1)/'
    fi

}

function addserver
{
    server=$1
    user=$2

    if [ -z "${server}" ] ; then
        echo "Usage: addserver fqdn.of.server [username]"
        echo " username will default to your current user ($(whoami))"
        return 1
    fi
    [ -z "${user}" ] && user="$(whoami)"
    echo "${user}@${server}" >> ${servers}
}


#for s in $(sed 's/[:space:]*#.*$//' ${servers} ${pservers}) ; do
#for s in $(cat ${servers} ${pservers} ${bservers} ${jservers} | sed 's/[:space:]*#.*//') ; do

username=$USER

for s in $(cat ${servers} | sed 's/[:space:]*#.*//') ; do
    regex='(.*)@([a-zA-Z0-9\-\_\.]*)'
    regex2='(.*)@(.*):([0-9]*)'
    if [[ ${s} =~ $regex2 ]] ; then 
        user=${BASH_REMATCH[1]}
        server=${BASH_REMATCH[2]}
        port=${BASH_REMATCH[3]}
        alias "${server}=ssh ${user}@${server} -p ${port}"
    elif [[ ${s} =~ $regex ]] ; then
        user=${BASH_REMATCH[1]}
        server=${BASH_REMATCH[2]}
        alias "${server}=ssh ${user}@${server}"
    else 
        alias "${s}=ssh $USER@${s}"
    fi
done

# vim:ts=4:sts=4:ai:et:syntax=sh:ft=sh:
